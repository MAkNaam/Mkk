import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import font_manager
import seaborn as sns
import pydeck as pdk

st.header("‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏≤‡∏á‡∏ñ‡∏ô‡∏ô üöóüí•")
import streamlit as st

#------------------------------------------------------------------------------
st.markdown("""
 <br>
 <br>
""", unsafe_allow_html=True)
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î font ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
font_path = "THSarabunNew Bold.ttf"  # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏≤‡∏ò font ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
try:
    font_manager.fontManager.addfont(font_path)
    plt.rcParams['font.family'] = 'TH Sarabun New'  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠ font ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
except FileNotFoundError:
    st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏ô‡∏ï‡πå THSarabunNew Bold.ttf ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå")
    st.stop()
except OSError as e :
    st.warning(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏ô‡∏ï‡πå: {e}")
    st.stop()

# ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå data2020_2022_fixed.csv
@st.cache_data
def load_data():
    return pd.read_csv("data2020_2022_fixed.csv") #‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç path file

#------------------------------------------------------------------------------
data2020_2022 = load_data()
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Sidebar
st.sidebar.header("‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
selected_year = st.sidebar.multiselect(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    options=data2020_2022['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].dropna().unique(),
    default=data2020_2022['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].dropna().unique()
)

selected_province = st.sidebar.multiselect(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    options=data2020_2022['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].dropna().unique(),
    default=data2020_2022['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].dropna().unique()
)

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
filtered_data = data2020_2022[
    (data2020_2022['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].isin(selected_year)) &
    (data2020_2022['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].isin(selected_province))
]
#------------------------------------------------------------------------------
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
st.subheader("‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏")
if 'LATITUDE' in filtered_data.columns and 'LONGITUDE' in filtered_data.columns:
    map_data = filtered_data[['LATITUDE', 'LONGITUDE']].dropna()
    st.pydeck_chart(pdk.Deck(
        map_style='mapbox://styles/mapbox/light-v9',
        initial_view_state=pdk.ViewState(
            latitude=map_data['LATITUDE'].mean(),
            longitude=map_data['LONGITUDE'].mean(),
            zoom=6,
            pitch=50,
        ),
        layers=[
            pdk.Layer(
                'ScatterplotLayer',
                data=map_data,
                get_position='[LONGITUDE, LATITUDE]',
                get_color='[200, 30, 0, 160]',
                get_radius=200,
            ),
        ],
    ))
else:
    st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà")
#------------------------------------------------------------------------------
# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö
st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö")
st.dataframe(filtered_data)
#------------------------------------------------------------------------------
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏™‡∏µ‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
sns.set_palette("coolwarm")
#------------------------------------------------------------------------------
# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
filtered_data['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(filtered_data['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')
# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å
province_accidents = filtered_data.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].count().nlargest(10)
# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ NaT ‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
if filtered_data['‡πÄ‡∏ß‡∏•‡∏≤'].isna().all():
    st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
else:
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤"
    hourly_accidents = filtered_data.groupby(filtered_data['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour)['‡πÄ‡∏ß‡∏•‡∏≤'].count()

    # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ
    st.markdown(f"""
    ### ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    - ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: **{province_accidents.index[0]}**
    - ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: **{hourly_accidents.idxmax()} ‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤**
    """)
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
#------------------------------------------------------------------------------

data2020_2022 = load_data()

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå data2020_2022.csv
total_accidents_all = len(data2020_2022)

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å
province_accidents = data2020_2022.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].count().nlargest(10)

#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤"
hourly_accidents = data2020_2022.groupby(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour)['‡πÄ‡∏ß‡∏•‡∏≤'].count()

#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô
cause_counts = data2020_2022['‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô'].value_counts()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
top_10_causes = cause_counts.nlargest(10)

#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö"
data2020_2022['‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = data2020_2022['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™'] + data2020_2022['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏µ 2021 ‡πÅ‡∏•‡∏∞ 2022
data_2021 = data2020_2022[data2020_2022['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] == 2021]
data_2022 = data2020_2022[data2020_2022['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] == 2022]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ
casualties_2021 = data_2021.groupby(data_2021['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].str[:2].astype(int))[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö']].sum()
casualties_2022 = data_2022.groupby(data_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].str[:2].astype(int))[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö']].sum()

#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ
vehicle_type_counts = data2020_2022['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].value_counts()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å (‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
top_5_vehicle_types = vehicle_type_counts.head(5)

# ‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å 5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å
other_vehicle_types = vehicle_type_counts[5:].sum()

#------------------------------------------------------------------------------
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
col1, col2 = st.columns(2)  # ‡πÅ‡∏ö‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå

# ‡∏Å‡∏£‡∏≤‡∏ü 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
with col1:
    st.subheader("10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î")
    fig, ax = plt.subplots(figsize=(6, 4))
    bars = ax.bar(province_accidents.index, province_accidents.values)
    ax.set_title(f'10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏£‡∏ß‡∏° {total_accidents_all} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)', fontsize=12)
    ax.set_xlabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=10)
    ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=10)
    plt.xticks(rotation=45, ha='right', fontsize=8)
    for bar in bars:
        yval = bar.get_height()
        ax.text(bar.get_x() + bar.get_width() / 2, yval + 5, int(yval), ha='center', va='bottom', fontsize=8)
    plt.tight_layout()
    st.pyplot(fig)

# ‡∏Å‡∏£‡∏≤‡∏ü‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
with col2:
    st.subheader("‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
    fig, ax = plt.subplots(figsize=(6, 4))
    ax.plot(hourly_accidents.index, hourly_accidents.values, marker='o')
    ax.set_title('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î', fontsize=12)
    ax.set_xlabel('‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á', fontsize=10)
    ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=10)
    ax.set_xticks(range(24))
    ax.grid(True)
    for i, v in enumerate(hourly_accidents.values):
        ax.text(hourly_accidents.index[i], v + 5, str(v), ha='center', fontsize=8)
    plt.tight_layout()
    st.pyplot(fig)

# ‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
with col1:
    st.subheader("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")
    fig, ax1 = plt.subplots(figsize=(6, 4))
    ax1.plot(casualties_2021.index, casualties_2021['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï'], label='‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï 2021', marker='o', color='blue')
    ax1.plot(casualties_2022.index, casualties_2022['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï'], label='‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï 2022', marker='o', color='green')
    ax1.set_xlabel('‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', fontsize=10)
    ax1.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (‡∏Ñ‡∏ô)', fontsize=10, color='blue')
    ax1.tick_params(axis='y', labelcolor='blue')
    ax2 = ax1.twinx()
    ax2.plot(casualties_2021.index, casualties_2021['‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'], label='‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö 2021', marker='o', color='red')
    ax2.plot(casualties_2022.index, casualties_2022['‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'], label='‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö 2022', marker='o', color='orange')
    ax2.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö (‡∏Ñ‡∏ô)', fontsize=10, color='red')
    ax2.tick_params(axis='y', labelcolor='red')
    plt.title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', fontsize=12)
    plt.grid(True)
    fig.legend(loc='upper left', bbox_to_anchor=(1.1, 1))
    plt.tight_layout()
    st.pyplot(fig)

# ‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏
with col2:
    st.subheader("‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏")
    fig, ax = plt.subplots(figsize=(6, 4))
    ax.pie(
        [top_5_vehicle_types[vehicle_type] for vehicle_type in top_5_vehicle_types.index] + [other_vehicle_types],
        labels=top_5_vehicle_types.index.tolist() + ['‡∏≠‡∏∑‡πà‡∏ô‡πÜ'],
        autopct='%1.1f%%',
        startangle=90,
    )
    ax.set_title('‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=12)
    plt.tight_layout()
    st.pyplot(fig)

#------------------------------------------------------------------------------

data2020_2022 = load_data()

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô
cause_counts = data2020_2022['‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô'].value_counts()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
top_10_causes = cause_counts.nlargest(10)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Bar Chart
fig, ax = plt.subplots(figsize=(12, 6))
bars = ax.bar(top_10_causes.index, top_10_causes.values)
ax.set_title('10 ‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÉ‡∏ô‡∏õ‡∏µ 2021-2022', fontsize=16)
ax.set_xlabel('‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ö‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
for bar in bars:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width() / 2, yval + 5, int(yval), ha='center', va='bottom', fontsize=10)

plt.tight_layout()
st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit


#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
selected_data = data2020_2022[['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1', '‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']]

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
selected_data['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = selected_data[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum(axis=1)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™
severe_accidents = selected_data[selected_data['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] > 0]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ
grouped_data = severe_accidents.groupby(['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'])['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].sum().reset_index()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_10_provinces = grouped_data.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].sum().nlargest(10).index
filtered_data = grouped_data[grouped_data['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].isin(top_10_provinces)]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Bar Chart ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ (10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)
fig, ax = plt.subplots(figsize=(12, 6))
for vehicle_type in filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].unique():
    data_subset = filtered_data[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type]
    ax.bar(data_subset['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'], data_subset['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'], label=vehicle_type)

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö', fontsize=14)
ax.set_title('‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.tight_layout()

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
st.pyplot(fig)

#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
selected_data = data2020_2022[['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1', '‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®', '‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö
bubble_data = selected_data.groupby(['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1', '‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®'])[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum().reset_index()
bubble_data['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = bubble_data[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum(axis=1)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡πÅ‡∏•‡∏∞ 5 ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_5_vehicle_types = bubble_data.groupby('‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1')['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].sum().nlargest(5).index
top_5_weather_conditions = bubble_data.groupby('‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®')['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].sum().nlargest(5).index
filtered_data = bubble_data[bubble_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].isin(top_5_vehicle_types) & bubble_data['‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®'].isin(top_5_weather_conditions)]

for vehicle_type in top_5_vehicle_types:
    filtered_data.loc[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö_normalized'] = \
        (filtered_data.loc[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] - \
         filtered_data.loc[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].min()) / \
        (filtered_data.loc[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].max() - \
         filtered_data.loc[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].min())

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Bubble Chart
fig, ax = plt.subplots(figsize=(20, 8))

for vehicle_type in top_5_vehicle_types:
    for weather_condition in top_5_weather_conditions:
        data_subset = filtered_data[(filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type) & (filtered_data['‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®'] == weather_condition)]
        if len(data_subset) > 0:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            # ‡πÉ‡∏ä‡πâ '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö_normalized' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î bubble
            ax.scatter(vehicle_type, weather_condition, s=data_subset['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö_normalized'].values[0] * 200,  # ‡∏õ‡∏£‡∏±‡∏ö scaling factor ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                       alpha=1, label=f'{vehicle_type} - {weather_condition}')

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ', fontsize=14)
ax.set_ylabel('‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®', fontsize=14)
ax.set_title('‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡πÅ‡∏•‡∏∞‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® (5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ - ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®', bbox_to_anchor=(1.05, 1), loc='upper left')  # ‡∏ß‡∏≤‡∏á legend ‡∏î‡πâ‡∏≤‡∏ô‡∏ô‡∏≠‡∏Å
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö"
data2020_2022['‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = data2020_2022['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™'] + data2020_2022['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö
hourly_casualties = data2020_2022.groupby(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour)[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö']].sum()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Line Chart
fig, ax1 = plt.subplots(figsize=(10, 6))

# ‡πÄ‡∏™‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (‡πÅ‡∏Å‡∏ô y ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢)
ax1.plot(hourly_casualties.index, hourly_casualties['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï'], label='‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', marker='o', color='blue')
ax1.set_xlabel('‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á', fontsize=14)
ax1.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (‡∏Ñ‡∏ô)', fontsize=14, color='blue')
ax1.tick_params(axis='y', labelcolor='blue')

# ‡πÄ‡∏™‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö (‡πÅ‡∏Å‡∏ô y ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤)
ax2 = ax1.twinx()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏Å‡∏ô y ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
ax2.plot(hourly_casualties.index, hourly_casualties['‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'], label='‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö', marker='o', color='red')
ax2.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö (‡∏Ñ‡∏ô)', fontsize=14, color='red')
ax2.tick_params(axis='y', labelcolor='red')

plt.title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á', fontsize=16)
plt.grid(True)
fig.legend(loc='upper left', bbox_to_anchor=(1.1, 1))  # ‡πÅ‡∏™‡∏î‡∏á legend ‡∏ô‡∏≠‡∏Å‡∏Å‡∏£‡∏≤‡∏ü
plt.tight_layout()
st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
selected_data = data2020_2022[['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1', '‡πÄ‡∏ß‡∏•‡∏≤']]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏
hourly_accidents = selected_data.groupby([selected_data['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour, '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'])['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].count().reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏')

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_5_vehicle_types = hourly_accidents.groupby('‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1')['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'].sum().nlargest(5).index
filtered_data = hourly_accidents[hourly_accidents['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].isin(top_5_vehicle_types)]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Line Chart - Multiple Lines
fig, ax = plt.subplots(figsize=(10, 6))

# ‡∏™‡∏£‡πâ‡∏≤‡∏á line chart ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ
for vehicle_type in top_5_vehicle_types:
    data_subset = filtered_data[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type]
    ax.plot(data_subset['‡πÄ‡∏ß‡∏•‡∏≤'], data_subset['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'], label=vehicle_type, marker='o')

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
ax.set_title('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.set_xticks(range(24))  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏Å‡∏ô x ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 0-23
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ')
ax.grid(True)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
selected_data = data2020_2022[['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1']]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏
grouped_data = selected_data.groupby(['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'])['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].count().reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏')

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_10_provinces = grouped_data.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'].sum().nlargest(10).index
filtered_data = grouped_data[grouped_data['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].isin(top_10_provinces)]

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_5_vehicle_types = filtered_data.groupby('‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1')['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'].sum().nlargest(5).index
filtered_data = filtered_data[filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].isin(top_5_vehicle_types)]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Stacked Bar Chart
fig, ax = plt.subplots(figsize=(12, 6))

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Stacked Bar Chart
width = 0.35  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πà‡∏á
provinces = filtered_data['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].unique()
vehicle_types = filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].unique()
years = filtered_data['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].unique()

bottom = [0] * len(provinces)

for year in years:
    for vehicle_type in vehicle_types:
        data_subset = filtered_data[(filtered_data['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] == year) & (filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type)]

        # Get values for all provinces, filling with 0 if not present
        values = data_subset.set_index('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'].reindex(provinces, fill_value=0).values

        ax.bar(provinces, values, width, label=f'{vehicle_type} ({year})', bottom=bottom)
        bottom = [b + v for b, v in zip(bottom, values)]

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
ax.set_title('‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞, ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î, ‡πÅ‡∏•‡∏∞‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏ (10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î, 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ)', fontsize=16)
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ (‡∏õ‡∏µ)', bbox_to_anchor=(1.05, 1), loc='upper left')  # ‡πÅ‡∏™‡∏î‡∏á legend ‡∏ô‡∏≠‡∏Å‡∏Å‡∏£‡∏≤‡∏ü
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

casualties_by_province = data2020_2022.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum().reset_index()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
casualties_by_province['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = casualties_by_province[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum(axis=1)
top_10_provinces = casualties_by_province.nlargest(10, '‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö')['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î']
casualties_by_province = casualties_by_province[casualties_by_province['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].isin(top_10_provinces)]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Stacked Bar Chart
fig, ax = plt.subplots(figsize=(12, 6))

# ‡∏™‡∏£‡πâ‡∏≤‡∏á stacked bar chart
provinces = casualties_by_province['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î']
deaths = casualties_by_province['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï']
severe_injuries = casualties_by_province['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™']
minor_injuries = casualties_by_province['‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']

ax.bar(provinces, deaths, label='‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï')
ax.bar(provinces, severe_injuries, bottom=deaths, label='‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™')
ax.bar(provinces, minor_injuries, bottom=deaths + severe_injuries, label='‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢')

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô', fontsize=14)
ax.set_title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î (10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.legend(loc='upper right')
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] = pd.to_datetime(data2020_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'], format='%d/%m/%Y', errors='coerce')

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
selected_data = data2020_2022[['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1']]

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏
monthly_accidents = selected_data.groupby([selected_data['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].dt.month, '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'])['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].count().reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏')

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_5_vehicle_types = monthly_accidents.groupby('‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1')['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'].sum().nlargest(5).index
filtered_data = monthly_accidents[monthly_accidents['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].isin(top_5_vehicle_types)]

fig, ax = plt.subplots(figsize=(12, 6))

# ‡∏™‡∏£‡πâ‡∏≤‡∏á line chart ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏õ‡∏µ
for vehicle_type in top_5_vehicle_types:
    for year in filtered_data['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].unique():
        data_subset = filtered_data[(filtered_data['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'] == vehicle_type) & (filtered_data['‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] == year)]

        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ data_subset['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        ax.plot(data_subset['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'], data_subset['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'], label=f'{vehicle_type} ({year})', marker='o')

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
ax.set_xlabel('‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
ax.set_title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏µ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.set_xticks(range(1, 13))  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏Å‡∏ô x ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1-12
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ (‡∏õ‡∏µ)', bbox_to_anchor=(1.05, 1), loc='upper left')  # ‡∏ß‡∏≤‡∏á legend ‡∏î‡πâ‡∏≤‡∏ô‡∏ô‡∏≠‡∏Å
ax.grid(True)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
data = data2020_2022[['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1']]

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ
province_vehicle_accidents = data.groupby(['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'])['‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ó‡∏µ‡πà1'].count().unstack().fillna(0)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_10_provinces = province_vehicle_accidents.sum(axis=1).nlargest(10).index
province_vehicle_accidents = province_vehicle_accidents.loc[top_10_provinces]

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 5 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_5_vehicles = province_vehicle_accidents.sum().nlargest(5).index
province_vehicle_accidents = province_vehicle_accidents[top_5_vehicles]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Stacked Bar Chart
fig, ax = plt.subplots(figsize=(12, 6))
province_vehicle_accidents.plot(kind='bar', stacked=True, ax=ax)
ax.set_title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î (10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.set_xlabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=14)
ax.set_ylabel('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)
ax.legend(title='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á')
plt.tight_layout()
st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤" (‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á ‡πÜ)
data2020_2022['‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤'] = pd.cut(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour,
                                    bins=[0, 6, 12, 18, 24],
                                    labels=['‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô', '‡πÄ‡∏ä‡πâ‡∏≤', '‡∏ö‡πà‡∏≤‡∏¢', '‡πÄ‡∏¢‡πá‡∏ô'],
                                    include_lowest=True)

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
heatmap_data = data2020_2022.groupby(['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤'])[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum().reset_index()
heatmap_data['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'] = heatmap_data[['‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏≤‡∏´‡∏±‡∏™', '‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢']].sum(axis=1)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 10 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï/‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
top_10_provinces = heatmap_data.groupby('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')['‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö'].sum().nlargest(10).index
filtered_data = heatmap_data[heatmap_data['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].isin(top_10_provinces)]

# Pivot the data for heatmap
heatmap_data_pivot = filtered_data.pivot(index='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', columns='‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', values='‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Heatmap
fig, ax = plt.subplots(figsize=(12, 8))
sns.heatmap(heatmap_data_pivot, annot=True, fmt=".0f", cmap="YlOrRd", ax=ax)  # annot=True ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç, fmt=".0f" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°
ax.set_title('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤, ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏ (10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)', fontsize=16)
ax.set_xlabel('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', fontsize=14)
ax.set_ylabel('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------
data2020_2022 = load_data()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏ß‡∏•‡∏≤" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'] = pd.to_datetime(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'], format='%H:%M', errors='coerce')

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏" ‡πÄ‡∏õ‡πá‡∏ô datetime object
data2020_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'] = pd.to_datetime(data2020_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'], format='%d/%m/%Y', errors='coerce')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå"
data2020_2022['‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå'] = data2020_2022['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏'].dt.day_name()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤" (‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á ‡πÜ)
data2020_2022['‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤'] = pd.cut(data2020_2022['‡πÄ‡∏ß‡∏•‡∏≤'].dt.hour,
                                    bins=[0, 6, 12, 18, 24],
                                    labels=['‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô', '‡πÄ‡∏ä‡πâ‡∏≤', '‡∏ö‡πà‡∏≤‡∏¢', '‡πÄ‡∏¢‡πá‡∏ô'],
                                    include_lowest=True)

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏
heatmap_data = data2020_2022.groupby(['‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', '‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤'])['‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤'].count().reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏')

# Pivot the data for heatmap
heatmap_data_pivot = heatmap_data.pivot(index='‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', columns='‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', values='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏')

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
day_order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
heatmap_data_pivot = heatmap_data_pivot.reindex(day_order)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Heatmap
fig, ax = plt.subplots(figsize=(10, 6))
sns.heatmap(heatmap_data_pivot, annot=True, fmt=".0f", cmap="YlOrRd", ax=ax)
ax.set_title('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', fontsize=16)
ax.set_xlabel('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', fontsize=14)
ax.set_ylabel('‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()

st.pyplot(fig)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
